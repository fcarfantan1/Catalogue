<?php
namespace Catalogue\Loop;

use Thelia\Core\Template\Element\BaseLoop;
use Thelia\Core\Template\Element\BaseI18nLoop;
use Thelia\Core\Template\Element\LoopResult;
use Thelia\Core\Template\Element\LoopResultRow;
use Thelia\Core\Template\Element\PropelSearchLoopInterface;
use Thelia\Core\Template\Element\ArraySearchLoopInterface;
use Thelia\Core\Template\Loop\Argument\ArgumentCollection;
use Thelia\Core\Template\Loop\Argument\Argument;
use Thelia\Core\Event\TheliaEvents;
use Catalogue\Model\CataloguePdfConfigQuery;
use Catalogue\Model\CataloguePdfConfig;
use Thelia\Core\Event\Image\ImageEvent;

class CatalogueLoop extends BaseI18nLoop implements PropelSearchLoopInterface {
    public function buildModelCriteria(){

    //public function buildArray(){
        $search = CataloguePdfConfigQuery::create();
        $this->configureI18nProcessing($search, [ 'ALT', 'TITLE', 'CHAPO', 'DESCRIPTION', 'POSTSCRIPTUM' ]);
        // $catalogueConfig=new CataloguePdfConfig();
        // $catalogueConfig->setTitle($search->get_t);
        // $catalogueConfig->setYear(2018);
        // $catalogueConfig->setId(1);
        // $catalogueConfig->setChapo("mes fougeres");
        // $catalogueConfig->setPostscriptum("toto");
      
        // $search= array($catalogueConfig);
        return $search;
    }
    public function getArgDefinitions()
    {
        return new ArgumentCollection(
           
        );
    }
    public function parseResults(LoopResult $loopResult){
        foreach ($loopResult->getResultDataCollection() as $cataloguePdfconfig) {
            $loopResultRow = new LoopResultRow();
            $event = new ImageEvent();
            $event->setSourceFilepath($cataloguePdfconfig->getUploadDir() . DS . $cataloguePdfconfig->getFile())
                ->setCacheSubdirectory('catalogue');
            $this->dispatcher->dispatch(TheliaEvents::IMAGE_PROCESS, $event);
            $loopResultRow->set("ID",$cataloguePdfconfig->getId());
            $loopResultRow->set("$RESPONSABLE_NOM",$cataloguePdfconfig->getResponable_nom());
            $loopResultRow->set("TITLE",$cataloguePdfconfig->getVirtualColumn('i18n_TITLE'));
            $loopResultRow->set("ORIGINAL_IMAGE_URL",$event->getFileUrl());
            $loopResultRow->set("IMAGE_URL",$event->getFileUrl());
            $loopResultRow->set("DESCRIPTION",$cataloguePdfconfig->getVirtualColumn('i18n_DESCRIPTION'));
            $loopResultRow->set("POSTSCRIPTUM",$cataloguePdfconfig->getVirtualColumn('i18n_POSTSCRIPTUM'));
            $loopResultRow->set("CHAPO",$cataloguePdfconfig->getChapo());
            $loopResultRow->set("LOCALE",$this->locale);

            $loopResult->addRow($loopResultRow);
        }
        return $loopResult;
    }

}

